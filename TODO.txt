[x] save the model and use it on new stuff!
[x] Modify the training data to just be either 1s or 0s. The model is pretty bad otherwise
[x] Start with a 100% activation of a certain number and then work backwards
    to the inputs to see what the neural network views as a certain number
    https://stackoverflow.com/questions/32000620/get-probable-input-based-on-a-given-output-in-a-neural-network
[x] Do some image processing to center the drawn number
    Optimal solution: make the drawing box only 20 x 20 and have the 8 rows and columns be permanently black
    Cool solution: actually do the image preocessing lol
[x] use the weights between layers to see what patterns the network is picking up on

[x] add a subplot of a 3d bar graph of an example 7
[x] change reverse reverse_engineer_image 
    function to not allow negative numbers
[x] graph the accuracy over each iteration
    [x] add multiples lines showing how learning rate affects this

[x] DISPLAY ALL HIDDEN NUERONS AT ONCE AND WATCH THEM CHANGE OVER TRAINING
    [ ] Save the weights over a training period to a file so you don't have
        to go through the process of training over and over
[ ] Make the code support any number of hidden layers with any number of neurons